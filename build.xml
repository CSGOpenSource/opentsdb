<project name="OpenTSDB" default="test" basedir=".">

    <property name="src" location="src"/>
    <property name="build" location="build"/>
    <property name="dist" location="dist"/>
    <property name="lib" location="third_party"/>
    <property name="test.dir" location="build/test"/>
    <property name="build-aux" location="build-aux"/>

    <target name="init" description="performing bootstrap">
        <mkdir dir="${build}/app" />
        <mkdir dir="${build}/test" />
        <mkdir dir="${build}/gwt" />
        <mkdir dir="${build}/logs" />

        <copy file="manifest.in" toFile="${build}/manifest" />
        <copy file="tsdb.in" toFile="${build}/tsdb" />
        <copy file="${src}/mygnuplot.sh" toDir="${build}" /> 
        <copy file="${src}/logback.xml" toDir="${build}" /> 
        <copy file="${src}/start-tsdb.sh" toDir="${build}" /> 
        <copy file="${src}/tsdb.local" toDir="${build}" /> 

        <copy toDir="${build}" flatten="true" >
            <fileset dir="${lib}">
                <include name="hbase/*.jar"/>
                <include name="guava/*.jar"/>
                <include name="suasync/*.jar"/>
                <include name="slf4j/*.jar"/>
                <include name="logback/*.jar"/>
                <include name="zookeeper/*.jar"/>
                <include name="netty/*.jar"/>
            </fileset>
        </copy>

        <chmod file="${build}/tsdb" perm="755" /> 
        <chmod file="${build}/start-tsdb.sh" perm="755" /> 
    </target>

    <target name="clean" description="remove build artifacts" >
        <delete dir="${build}"/>
        <delete dir="${dist}"/>
    </target>

    <target name="compile-app" depends="init" description="compile the source ">
        <exec executable="${build-aux}/gen_build_data.sh" dir="${build}" >
            <arg line="${build}/src/BuildData.java net.opentsdb"/>
        </exec>

        <javac srcdir="." verbose="false" destdir="${build}/app" includeantruntime="false">
            <compilerarg value="-Xlint"/>
                <include name="src/core/Aggregator.java" /> 
                <include name="src/core/Aggregators.java" /> 
                <include name="src/core/CompactionQueue.java" /> 
                <include name="src/core/Const.java" /> 
                <include name="src/core/DataPoint.java" /> 
                <include name="src/core/DataPoints.java" /> 
                <include name="src/core/DataPointsIterator.java" /> 
                <include name="src/core/IncomingDataPoints.java" /> 
                <include name="src/core/IllegalDataException.java" /> 
                <include name="src/core/Internal.java" /> 
                <include name="src/core/Query.java" /> 
                <include name="src/core/RowKey.java" /> 
                <include name="src/core/RowSeq.java" /> 
                <include name="src/core/SeekableView.java" /> 
                <include name="src/core/Span.java" /> 
                <include name="src/core/SpanGroup.java" /> 
                <include name="src/core/TSDB.java" /> 
                <include name="src/core/Tags.java" /> 
                <include name="src/core/TsdbQuery.java" /> 
                <include name="src/core/WritableDataPoints.java" /> 
                <include name="src/graph/Plot.java" /> 
                <include name="src/stats/Histogram.java" /> 
                <include name="src/stats/StatsCollector.java" /> 
                <include name="src/tools/ArgP.java" /> 
                <include name="src/tools/CliOptions.java" /> 
                <include name="src/tools/CliQuery.java" /> 
                <include name="src/tools/DumpSeries.java" /> 
                <include name="src/tools/Fsck.java" /> 
                <include name="src/tools/TSDMain.java" /> 
                <include name="src/tools/TextImporter.java" /> 
                <include name="src/tools/UidManager.java" /> 
                <include name="src/tsd/BadRequestException.java" /> 
                <include name="src/tsd/ConnectionManager.java" /> 
                <include name="src/tsd/GnuplotException.java" /> 
                <include name="src/tsd/GraphHandler.java" /> 
                <include name="src/tsd/HttpQuery.java" /> 
                <include name="src/tsd/HttpRpc.java" /> 
                <include name="src/tsd/LineBasedFrameDecoder.java" /> 
                <include name="src/tsd/LogsRpc.java" /> 
                <include name="src/tsd/PipelineFactory.java" /> 
                <include name="src/tsd/PutDataPointRpc.java" /> 
                <include name="src/tsd/IncDataPointRpc.java" /> 
                <include name="src/tsd/RpcHandler.java" /> 
                <include name="src/tsd/StaticFileRpc.java" /> 
                <include name="src/tsd/TelnetRpc.java" /> 
                <include name="src/tsd/WordSplitter.java" /> 
                <include name="src/tsd/TsdApi.java" /> 
                <include name="src/uid/NoSuchUniqueId.java" /> 
                <include name="src/uid/NoSuchUniqueName.java" /> 
                <include name="src/uid/UniqueId.java" /> 
                <include name="src/uid/UniqueIdInterface.java" /> 
                <include name="build/src/BuildData.java" />
            <classpath>
                <fileset dir="${lib}">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </javac>

        <jar destfile="${build}/tsdb-1.1.0.jar" basedir="${build}/app" />

    </target>    

    <target name="compile-ui" depends="init" >
        <java classname="com.google.gwt.dev.Compiler" fork="true" >
             <classpath>
             	<fileset dir="${lib}/gwt" />
             	<pathelement path="${src}/" /> 
             </classpath>
             <arg line="-ea -war ${build}/gwt tsd.QueryUi"/> 
       </java>

       <mkdir dir="${build}/static" />
       <copy file="${src}/tsd/static/favicon.ico" toDir="${build}/static" />
       <copy toDir="${build}/static" >
           <fileset dir="${build}/gwt/queryui/" >
               <include name="**/*" />
           </fileset>
       </copy>
    </target>

    <target name="compile-test" depends="compile-app">
        <javac srcdir="." verbose="false" destdir="${test.dir}" includeantruntime="false">
            <compilerarg value="-Xlint"/>
                <include name="test/core/AggregatorsTest.java" /> 
                <include name="test/core/CompactionQueueTest.java" /> 
                <include name="test/core/TagsTest.java" /> 
                <include name="test/stats/TestHistogram.java" /> 
                <include name="test/tsd/TestGraphHandler.java" /> 
                <include name="test/uid/TestNoSuchUniqueId.java" /> 
                <include name="test/uid/TestUniqueId.java" />
            <classpath>
                <fileset dir="${lib}">
                    <include name="**/*.jar"/>
                </fileset>
                <pathelement location="${build}/tsdb-1.1.0.jar" />
            </classpath>
        </javac>
    </target>
	
    <target name="dist" depends="init,compile-app,compile-ui"> 
       <delete dir="${dist}"/>

       <mkdir dir="${dist}/opentsdb" />
       <mkdir dir="${dist}/opentsdb/logs" />
       <copy toDir="${dist}/opentsdb" >
           <fileset dir="${build}" >
               <include name="static/**/*" />
           </fileset>
       </copy>

       <copy toDir="${dist}/opentsdb" flatten="true" >
            <fileset dir="${build}" >
                <include name="*.jar"/>
            </fileset>
       </copy>

       <copy toDir="${dist}/opentsdb" file="${build}/tsdb" />
       <copy toDir="${dist}/opentsdb" file="${build}/mygnuplot.sh" />
       <copy toDir="${dist}/opentsdb" file="${build}/start-tsdb.sh" />
       <copy toDir="${dist}/opentsdb" file="${build}/tsdb.local" />
       <copy toDir="${dist}/opentsdb" file="${build}/logback.xml" />

       <chmod file="${dist}/opentsdb/tsdb" perm="755" /> 
       <chmod file="${dist}/opentsdb/start-tsdb.sh" perm="755" /> 

       <tar destfile="${dist}/opentsdb-1.1.0.tgz" basedir="${dist}" compression="gzip" />

       <delete dir="${dist}/opentsdb"/>
    </target>

    <target name="execute-test" >
        <echo message="${test.class.name}"/> 
           <java classname="org.junit.runner.JUnitCore" fork="true" >
             <classpath>
             	<fileset dir="${lib}" >
             	    <include name="**/*.jar" />
             	</fileset>
             	<pathelement path="${build}/test" /> 
             	<pathelement location="${build}/tsdb-1.1.0.jar" /> 
             </classpath>
             <arg line="${test.class.name}"/> 
           </java>
    </target>

    <target name="test" >  <!-- depends="compile-app,compile-test">    -->
       <property name="test.class.name" value="net.opentsdb.core.TagsTest" />
       <antcall target="execute-test" />

       <property name="test.class.name" value="net.opentsdb.core.AggregatorsTest" />
       <antcall target="execute-test" />

       <property name="test.class.name" value="net.opentsdb.core.CompactionQueueTest" />
       <antcall target="execute-test" />

       <property name="test.class.name" value="net.opentsdb.tsd.GraphHandlerTest" />
       <antcall target="execute-test" />

       <property name="test.class.name" value="net.opentsdb.stats.HistogramTest" />
       <antcall target="execute-test" />

       <property name="test.class.name" value="net.opentsdb.uid.UniqueIdTest" />
       <antcall target="execute-test" />

       <property name="test.class.name" value="net.opentsdb.uid.NoSuchUniqueIdTest" />
       <antcall target="execute-test" />

       <!--
       <junit printsummary="yes" haltonfailure="yes" showoutput="true" fork="yes">
           <classpath>
               <pathelement path="${lib}"/>
               <pathelement path="${build}/app"/>
               <pathelement path="${build}/test"/>
           </classpath>
           <formatter type="plain"/>
           <batchtest  >
               <fileset dir="${test.dir}" >
                   <include name="**/*Test.class" />
               </fileset>
           </batchtest>  
       </junit>
       -->
    </target>

</project>

